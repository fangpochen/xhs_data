---
description: 
globs: 
alwaysApply: true
---
# 小红书维权退保数据采集与分发系统规则

## 项目概述
本项目旨在构建一个专注于维权退保领域的小红书数据采集与分发系统，通过Python 3.12实现数据采集、自动上传和评论互动功能，为私域运营提供数据支持。

## 核心功能
### 1. 数据采集模块 (@xhs_rights_collector.py)
- 基于Spider_XHS项目进行二次开发
- 采集维权退保相关的内容
- 支持定时自动采集
- 支持多账号Cookie管理
- 数据本地化存储
- 支持关键词搜索和过滤
- 支持数据清洗和分类

### 2. 内容发布模块 (@xhs_auto_poster.py)
- 基于开源代码实现小红书内容自动发布
- 支持多种内容形式（图文、视频、混合）
- 支持定时发布
- 支持多账号管理
- 内容合规性检查
- 发布频率控制
- 内容模板管理

### 3. 评论管理模块 (@xhs_comment_manager.py)
- 基于开源代码实现评论功能
- 支持自动评论和回复
- 评论管理和数据分析
- 互动频率控制
- 评论内容审核
- 评论情感分析
- 用户互动追踪

### 4. 私域运营模块 (@xhs_private_domain.py)
- 私域数据采集
- 内容分发功能
- 用户引流
- 私域转化
- 用户画像分析
- 转化率追踪
- 数据可视化

## 技术规范
### 1. 开发环境
- Python 3.12+
- 使用虚拟环境管理依赖
- 使用Poetry进行包管理
- 使用Black进行代码格式化
- 使用Ruff进行代码检查
- 使用MyPy进行类型检查

### 2. 代码规范
- 遵循PEP 8编码规范
- 使用类型注解
- 完整的文档字符串
- 模块化设计
- 异常处理完善
- 异步编程支持
- 日志记录规范

### 3. 项目结构
```
/
├── src/                      # 源代码目录
│   ├── collectors/          # 数据采集模块
│   ├── posters/            # 内容发布模块
│   ├── commenters/         # 评论管理模块
│   ├── private_domain/     # 私域运营模块
│   └── utils/              # 工具函数
├── tests/                   # 测试目录
├── configs/                 # 配置文件
├── data/                    # 数据存储
├── logs/                    # 日志文件
├── docs/                    # 文档
├── scripts/                 # 脚本文件
├── pyproject.toml          # Poetry配置
├── README.md               # 项目说明
└── .env                    # 环境变量
```

### 4. 依赖管理
```toml
[tool.poetry]
name = "xhs-rights-collector"
version = "0.1.0"
description = "小红书维权退保数据采集与分发系统"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.9.0"
pydantic = "^2.6.0"
sqlalchemy = "^2.0.0"
pandas = "^2.2.0"
numpy = "^1.26.0"
loguru = "^0.7.0"
python-dotenv = "^1.0.0"
```

## 数据存储
### 1. 数据库设计
- 使用SQLAlchemy ORM
- 支持MySQL/PostgreSQL
- 数据表设计规范
- 索引优化
- 数据备份策略

### 2. 文件存储
- 结构化数据存储
- 数据备份和恢复
- 数据加密存储
- 定期数据清理
- 文件命名规范

## 安全规范
### 1. 账号安全
- Cookie安全存储
- 账号信息加密
- 访问频率限制
- 异常行为监控
- 多账号轮换机制

### 2. 数据安全
- 敏感数据加密
- 访问权限控制
- 操作日志记录
- 数据备份策略
- 安全审计机制

## 运营规则
### 1. 平台规则
- 遵守小红书平台规则
- 内容真实可靠
- 避免违规内容
- 保护用户隐私
- 合理互动频率
- 避免骚扰用户
- 多账号轮换使用

### 2. 内容规范
- 内容质量要求
- 发布频率控制
- 互动策略制定
- 用户反馈处理
- 危机公关预案

## 监控告警
### 1. 系统监控
- CPU使用率
- 内存使用
- 磁盘空间
- 网络流量
- 服务状态

### 2. 业务监控
- 采集成功率
- 发布成功率
- 评论互动率
- 账号健康度
- 数据质量

### 3. 告警机制
- 邮件通知
- 钉钉通知
- 告警级别
- 告警规则
- 处理流程

## 开发计划
1. 数据采集模块
   - 集成Spider_XHS项目
   - 开发维权数据采集
   - 实现数据存储
   - 添加数据清洗
   - 实现数据分析

2. 自动发布模块
   - 集成开源发布代码
   - 开发内容发布功能
   - 实现定时发布
   - 添加内容审核
   - 实现模板管理

3. 评论互动模块
   - 集成开源评论代码
   - 开发评论管理功能
   - 实现自动互动
   - 添加情感分析
   - 实现用户追踪

4. 私域运营模块
   - 开发私域数据采集
   - 实现内容分发
   - 完善运营工具
   - 添加数据分析
   - 实现可视化

5. 部署运维模块
   - Docker容器化
   - CI/CD流程
   - 监控告警
   - 自动化部署
   - 性能优化

## 注意事项
1. 遵守小红书平台规则和法律法规
2. 保护用户隐私和数据安全
3. 合理控制采集和发布频率
4. 定期更新和维护系统
5. 及时处理异常情况
6. 确保系统高可用性
7. 做好数据备份和恢复
8. 监控系统运行状态

## 更新记录
- 2024-03-21: 创建项目规则文档
- 2024-03-21: 添加部署架构和CI/CD流程
- 2024-03-25: 更新Python版本至3.12，优化项目结构
- 待补充... 